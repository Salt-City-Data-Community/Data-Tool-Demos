{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Disease",
						"type": "DatasetReference"
					},
					"name": "Disease"
				},
				{
					"dataset": {
						"referenceName": "DiseaseDescription",
						"type": "DatasetReference"
					},
					"name": "Description"
				},
				{
					"dataset": {
						"referenceName": "Precaution",
						"type": "DatasetReference"
					},
					"name": "Precaution"
				},
				{
					"dataset": {
						"referenceName": "Symptoms",
						"type": "DatasetReference"
					},
					"name": "Symptoms"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Final",
						"type": "DatasetReference"
					},
					"name": "Final"
				}
			],
			"transformations": [
				{
					"name": "DiseaseDescription"
				},
				{
					"name": "PrecautionJoin"
				},
				{
					"name": "RemoveDuplicateColumns"
				},
				{
					"name": "SymptomUnpivot"
				},
				{
					"name": "RemoveUnwantedColumns"
				},
				{
					"name": "SymptomsJoin"
				},
				{
					"name": "NoNulls"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Disease as string,",
				"          Symptom_0 as string,",
				"          Symptom_1 as string,",
				"          Symptom_2 as string,",
				"          Symptom_3 as string,",
				"          Symptom_4 as string,",
				"          Symptom_5 as string,",
				"          Symptom_6 as string,",
				"          Symptom_7 as string,",
				"          Symptom_8 as string,",
				"          Symptom_9 as string,",
				"          Symptom_10 as string,",
				"          Symptom_11 as string,",
				"          Symptom_12 as string,",
				"          Symptom_13 as string,",
				"          Symptom_14 as string,",
				"          Symptom_15 as string,",
				"          Symptom_16 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Disease",
				"source(output(",
				"          Disease as string,",
				"          Symptom_Description as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Description",
				"source(output(",
				"          Disease as string,",
				"          Symptom_precaution_0 as string,",
				"          Symptom_precaution_1 as string,",
				"          Symptom_precaution_2 as string,",
				"          Symptom_precaution_3 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Precaution",
				"source(output(",
				"          Symptom as string,",
				"          Symptom_severity as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Symptoms",
				"Disease, Description join(Disease@Disease == Description@Disease,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> DiseaseDescription",
				"RemoveUnwantedColumns, Precaution join(RemoveUnwantedColumns@Disease == Precaution@Disease,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> PrecautionJoin",
				"DiseaseDescription select(mapColumn(",
				"          Disease = Disease@Disease,",
				"          Symptom_0,",
				"          Symptom_1,",
				"          Symptom_2,",
				"          Symptom_3,",
				"          Symptom_4,",
				"          Symptom_5,",
				"          Symptom_6,",
				"          Symptom_7,",
				"          Symptom_8,",
				"          Symptom_9,",
				"          Symptom_10,",
				"          Symptom_11,",
				"          Symptom_12,",
				"          Symptom_13,",
				"          Symptom_14,",
				"          Symptom_15,",
				"          Symptom_16,",
				"          Symptom_Description",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveDuplicateColumns",
				"RemoveDuplicateColumns unpivot(output(",
				"          Symptom as string,",
				"          Symptom_0 as string,",
				"          Symptom_1 as string,",
				"          Symptom_2 as string,",
				"          Symptom_3 as string,",
				"          Symptom_4 as string,",
				"          Symptom_5 as string,",
				"          Symptom_6 as string,",
				"          Symptom_7 as string,",
				"          Symptom_8 as string,",
				"          Symptom_9 as string,",
				"          Symptom_10 as string,",
				"          Symptom_11 as string,",
				"          Symptom_12 as string,",
				"          Symptom_13 as string,",
				"          Symptom_14 as string,",
				"          Symptom_15 as string,",
				"          Symptom_16 as string",
				"     ),",
				"     ungroupBy(Disease,",
				"          Symptom_Description),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> SymptomUnpivot",
				"SymptomUnpivot select(mapColumn(",
				"          Disease,",
				"          Symptom = Symptom_0,",
				"          Symptom_Description",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveUnwantedColumns",
				"PrecautionJoin, Symptoms join(RemoveUnwantedColumns@Symptom == Symptoms@Symptom,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SymptomsJoin",
				"SymptomsJoin filter(RemoveUnwantedColumns@Symptom != 'null') ~> NoNulls",
				"NoNulls sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Final"
			]
		}
	}
}